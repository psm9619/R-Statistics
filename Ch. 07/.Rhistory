plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", x="day")
plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
axis(1)
lines(c(mu-3*sig, mu+3*sig), c(0,0))
mu <- 800 ; sig <- 40
l <- seq(mu-3*sig, mu+3*sig, by =1)
l.norm <- dnorm(l, mu, sig)
l.norm
plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
axis(1)
lines(c(mu-3*sig, mu+3*sig), c(0,0))
plot(l, l.norm, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
s <- seq(0, 700, by = 1)
s.norm <- dnorm(s, mu, sig)
polygon(s,s.norm, density = 10, col="red")
l.norm <- dnorm(l, mu, sig)
l.norm
plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
axis(1)
lines(c(mu-3*sig, mu+3*sig), c(0,0))
s <- seq(0, 700, by = 1)
s.norm <- dnorm(s, mu, sig)
polygon(s,s.norm, density = 10, col="red")
s <- c(0, s, 700)
s.norm <- c(0,s.norm,0)
polygon(s,s.norm, density = 10, col="red")
plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
axis(1)
lines(c(mu-3*sig, mu+3*sig), c(0,0))
s <- seq(0, 700, by = 1)
s.norm <- dnorm(s, mu, sig)
s <- c(0, s, 700)
s.norm <- c(0,s.norm,0)
polygon(s,s.norm, density = 10, col="red")
pnorm(750,800,40)
l.norm
plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
axis(1)
lines(c(mu-3*sig, mu+3*sig), c(0,0))
s <- seq(0, 700, by = 1)
s.norm <- dnorm(s, mu, sig)
s <- c(0, s, 700)
s.norm <- c(0,s.norm,0)
polygon(s,s.norm, density = 20, col="red")
data <- read.tale ("http://www.amstat.org/publications/jse/datasets/babyboom.dat.txt", header=F)
data <- read.table ("http://www.amstat.org/publications/jse/datasets/babyboom.dat.txt", header=F)
nrow(data)
ncol(data)
str(data)
head(data)
data <- read.table ("http://www.amstat.org/publications/jse/datasets/babyboom.dat.txt", header=F)
data
nrow(data)
ncol(data)
str(data)
head(data)
tail(data)
names(data)
names(data) <- c("time", "gender", "weight", "minutes")
names(date)
names(data)
names(data)[1] <- "time.24hrs"
names(data)
row.names(data)
g1 <- data$gender
g2 <- data[,2]
g3 <- data["gender"]
g4 <- data[[2]]
g5 <- data[["gender"]]
gg1 <- data[, c(2,4)]
g2 <- data[c("gender", "minutes")]
str(data[data$gender == 2,])
male.m <- mean(data$weight)
chapter7 <- data[, c(2,3)]
setwd("D:/Workspace/R_Statistics/Ch. 07")
write.table(chapter7, "./data/chapter7.txt")
write.table(chapter7, "./data/chapter7.txt")
write.table(chapter7, "./data/chapter7.txt", row.names=FALSE)
# Ch. 7.
# 7-1 모집단이 2 개 일 경우
data <- read.table("./data/chapter7.txt", header=T)
var.test(data$weight ~ data$gender)
str(data$weight)
str(data$gender)
t.test(data$weight~data$gender, mu = 0, alternative = "less", var.equal = TRUE)
data2 <- data.frame (gender=c(1,1), weight = c(3350, 3380))
boy <- subset(data,gender == 1)
girl <- subset(data, gender ==2)
data <- data.frame(data, data2)
# 정규성 테스트
shapiro.test(boy$weight)
qqnorm(boy$weight)
qqline (boy$weight)
shapiro.test(girl$weight)
qqnorm(girl$weight)
qqline(girl$$weight)
qqline(girl$weight)
# 정규성 테스트
shapiro.test(boy$weight)
shapiro.test(girl$weight)
# 정규성 테스트
shapiro.test(boy$weight)
qqnorm(boy$weight)
qqline (boy$weight)
shapiro.test(girl$weight)
qqnorm(girl$weight)
qqline(girl$weight)
# F test to compare two variables
var.test(data$weight ~ data$gender)
# --------------------
install.packages("paireddata")
# --------------------
install.packages("PairedData")
library(PairedData)
data("Anorexia")
data <- Anorexia
str(data)
install. packages ("psyche")
install.packages ("psyche")
install.packages ("psych")
data(anorexia)
data <- Anorexia
str(data)
install.packages ("psych")
library(psych)
summary(data)
describe(data)
n <- length(data$Prior - data$Post)
m <- mean(data$Prior - data$Post)
s <- sd (data$Prior - data$Post)
t.t <- m/(s/sqrt(n))
t.t <- m/(s/sqrt(n)) ; t.t
t.test(data$Prior, data$Post, paired=T, alternatie = "less")
car <- mtcars
head(car)
am <- car$am
am
mpg <- car$mpg
mpg
t.test(am, mpg, paired=T)
library(dplyr)
mpg.am <- car %>%
select (mpg, am) %>%
group_by (am)
mpg.am
mpg.auto <- mpg.am %>%
filter(am %in% 1)
mpg.auto
mpg.man <- mpg.am %>%
filter(am %in% 0)
mpg.auto <- mpg.am %>%
filter(am %in% 1) %>%
select (mpg)
mpg.auto <- mpg.am %>%
filter(am %in% 1) %>%
select (mpg)
mpg.man[1]
t.test(mpg.man[1], mpg.am[1], paired=T, alternative = "less")
var.test(mpg.am[1]~mpg.man[1])
var.test(mpg.am~mpg.man)
var.test(mpg.man[1] ~ mpg.auto[1])
var.test(mpg.mpg~car$am)
var.test(car.mpg~car$am)
var.test(car$mpg~car$am)
t.test(car$mpg~car$am, mu = 0, var.equal=TRUE)
var.test(car$mpg~car$am)
t.test(car$mpg~car$am, mu = 0, var.equal=TRUE)
v <- var.test(car$mpg~car$am)
v$F
v$statistic
v$statistic ; v$p.value
v$statistic ; v$p.value ; v$conf.int
t <- t.test(car$mpg~car$am, mu = 0, var.equal=TRUE)
t$statistic ; t$p.value
t$statistic ; t$p.value ; t$conf
t$statistic ; t$p.value ; t$conf.int
t <- t.test(car$mpg~car$am, mu = 0, var.equal=TRUE)
t ; t$statistic ; t$p.value ; t$conf.int
t$statistic ; t$p.value
MASS::Cars93
mpg.man$mpg
var.test(mpg.auto$mpg~mpg.man$mpg)
var.test(car$mpg~car$am)
v <- var.test(car$mpg~car$am)
str(v)
list(v$statistic, v$p.value)
cbind(v$statistic, v$p.value)
rbind(v$statistic, v$p.value)
r <- rbind(v$statistic, v$p.value)
str(r)
r <- cbind(v$statistic, v$p.value)
str(r)
list(v$statistic, v$p.value)
data.frame(v$statistic, v$p.value)
data.frame(F_value = v$statistic, P_value = v$p.value)
data.frame(F_value = v$statistic, P_value = v$p.value,
Conclusion = "H_0")
data.frame(F_value = v$statistic, P_value = v$p.value,
Conclusion = "H_0 is TRUE\nsince P > 0.05")
data.frame(F_value = v$statistic, P_value = v$p.value,
Conclusion = "H_0 is TRUE since P > 0.05")
data.frame(F_value = round(v$statistic, 3), P_value = round(v$p.value,3),
Conclusion = "두 집단의 분산은 다르지 않다 (H_0)")
t <- t.test(car$mpg~car$am,
mu = 0, var.equal = TRUE)
t
data.frame(t_value = round(t$statistic, 3), P_value = round(t$p.value,3),
Conclusion = "두 집단의 분산은 동일하다")
data.frame(t_value = round(t$statistic, 3), P_value = round(t$p.value,3),
Conclusion = "mpg 는 am 에 따라 차이가 나지 않는다")
MASS::Cars93
cars <- MASS::Cars93
org <- cars$Origin
org <- cars$Origin ; head(org)
org <- cars$Origin ; org
str(cars)
head(cars)
cars_M <- MASS::Cars93
head(cars_M)
org <- cars_M$Origin
org.US <- cars_M %>%
select (Origin, Price) %>%
filter(Origin %in% "USA")
org.US
org.non_US <-  cars_M %>%
select (Origin, Price) %>%
filter(Origin %in% "non-USA")
org.US <- org.US[1]
org.US
org.US <- cars_M %>%
select (Origin, Price) %>%
filter(Origin %in% "USA")
org.non_US <-  cars_M %>%
select (Origin, Price) %>%
filter(Origin %in% "non-USA")
org.US2 <- org.US[2]
org.US2
org.non_US2 <- org.non_US[2]
org.non_US2
v <- var.test(org.US2~org.non_US2)
str(org.non_US2)
# 등분산성 테스트 (분산이 같은가)
# F test to compare two variables
data$weight
# Ch. 7.
# 7-1 모집단이 2 개 일 경우
data <- read.table("./data/chapter7.txt", header=T)
data2 <- data.frame (gender=c(1,1), weight = c(3350, 3380))
boy <- subset(data,gender == 1)
girl <- subset(data, gender ==2)
# 정규성 테스트
shapiro.test(boy$weight)  # p-value = 0.01798 -> below alpha = 0.05
qqnorm(boy$weight)  # 밑에 그려지는 line 에서 심하게 (significant) 분산한다.
qqline(boy$weight)
shapiro.test(girl$weight)
qqnorm(girl$weight)
qqline(girl$weight)
# 등분산성 테스트 (분산이 같은가)
# F test to compare two variables
data$weight
# 등분산성 테스트 (분산이 같은가)
# F test to compare two variables
str(data$weight)
str(data)
str(data$weight)
str(cars_M)
cars_M$Origin
org.US2 <- org.US$Price
str(org.US2)
v <- var.test(org.US$Price~org.non_US$Price)
v
v <- var.test(org.US$Price~org.non_US$Price)
v
org.non_US2 <- org.non_US$Price
shapiro.test(org.US2)
qnorm(org.US2)
qqnorm(org.US2)
qqnorm(org.US2)
qqline(org.US2)
shapiro.test(org.non_US2)
qqnorm(org.non_US2)
qqline(org.non_US2)
pars(mfrow=c(1,2))
par(mfrow=c(1,2))
shapiro.test(org.US2)
qqnorm(org.US2)
qqline(org.US2)
shapiro.test(org.non_US2)
qqnorm(org.non_US2)
v <- var.test(org.US2~org.non_US2)
org.US2 <- org.US$Price ; org.US2
org.non_US2 <- org.non_US$Price ; org.non_US2
var.test(org.US2~org.non_US2)
var.test(org.US2,org.non_US2)
v <- var.test(org.US2,org.non_US2)
t <- t.test(org.US2, org.non_US2,
mu = 0, var.equal = FALSE)
t <- t.test(org.US2, org.non_US2,
mu = 0, var.equal = FALSE) ; t
data.frame(t_value = round(t$statistic, 3), P_value = round(t$p.value,3),
Conclusion = "mpg 는 am 에 따라 차이가 나지 않는다")
data.frame(t_value = round(t$statistic, 3), P_value = round(t$p.value,3),
Conclusion = "P>0.05 이므로 국적에 따른 가격 차이가 나지 않는다")
car <- mtcars
mpg.auto <- car %>%
filter(am %in% 1) %>%
select (mpg) %>%
org.non_US <-  cars_M %>%
select (Origin, Price) %>%
filter(Origin %in% "non-USA")
mpg.auto <- car %>%
filter(am %in% 1) %>%
select (mpg)
mpg.auto <- car %>%
filter(am %in% 1) %>%
select (mpg)  ; mpg.auto
mpg.man <- car %>%
filter(am %in% 0) %>%
select (mpg)
car <- mtcars
mpg.auto <- car %>%
filter(am %in% 1) %>%
select (mpg)
mpg.man <- car %>%
filter(am %in% 0) %>%
select (mpg)
par(mfrow=c(1,2))
shapiro.test(mpg.auto)
qqnorm(mpg.auto)
qqline(mpg.auto)
shapiro.test(mpg.man)
qqnorm(mpg.man)
qqline(mpg.man)
v <- var.test(mpg.auto,mpg.man)
data.frame(F_value = round(v$statistic, 3), P_value = round(v$p.value,3),
Conclusion = "두 집단의 분산은 동일하지 않다")
t <- t.test(mpg.auto,mpg.man,
mu = 0, var.equal = FALSE) ; t
data.frame(t_value = round(t$statistic, 3), P_value = round(t$p.value,3),
Conclusion = "P>0.05 이므로 국적에 따른 가격 차이가 나지 않는다")
mpg.auto <- car %>%
filter(am %in% 1) %>%
select (mpg)
mpg.man <- car %>%
filter(am %in% 0) %>%
select (mpg)
par(mfrow=c(1,2))
shapiro.test(mpg.auto)
qqnorm(mpg.auto)
qqline(mpg.auto)
shapiro.test(mpg.man)
qqnorm(mpg.man)
qqline(mpg.man)
v <- var.test(mpg.auto,mpg.man)
data.frame(F_value = round(v$statistic, 3), P_value = round(v$p.value,3),
Conclusion = "두 집단의 분산은 동일하지 않다")
t <- t.test(mpg.auto,mpg.man,
mu = 0, var.equal = FALSE) ; t
data.frame(t_value = round(t$statistic, 3), P_value = round(t$p.value,3),
Conclusion = "P>0.05 이므로 국적에 따른 가격 차이가 나지 않는다")
shapiro.test(mpg.auto)
qqnorm(mpg.auto)
qqline(mpg.auto)
shapiro.test(mpg.man)
qqnorm(mpg.man)
qqline(mpg.man)
mpg.auto <- car %>%
filter(am %in% 1) %>%
select (mpg)
mpg.man <- car %>%
filter(am %in% 0) %>%
select (mpg)
par(mfrow=c(1,2))
shapiro.test(mpg.auto)
qqnorm(mpg.auto)
qqline(mpg.auto)
shapiro.test(mpg.man)
qqnorm(mpg.man)
qqline(mpg.man)
mpg.auto
mpg.man
org.US <- cars_M %>%
filter(Origin %in% "USA") %>%
select (Price)
org.non_US <-  cars_M %>%
filter(Origin %in% "non_US") %>%
select (Price)
par(mfrow=c(1,2))
shapiro.test(org.US)
qqnorm(org.US)
qqline(org.US)
shapiro.test(org.non_US)
qqnorm(org.non_US)
qqline(org.non_US)
str(mpg.man)
mpg.auto <- as.table(mpg.auto)
mpg.auto <- as.list(mpg.auto)
par(mfrow=c(1,2))
shapiro.test(mpg.auto)
mpg.auto <- car %>%
filter(am %in% 1) %>%
select (mpg)
mpg.man <- car %>%
filter(am %in% 0) %>%
select (mpg)
mpg.auto <- mpg.auto$mpg
mpg.man <- mpg.man$mpg
par(mfrow=c(1,2))
shapiro.test(mpg.auto)
qqnorm(mpg.auto)
qqline(mpg.auto)
shapiro.test(mpg.man)
'qqnorm(mpg.man)
qqline(mpg.man)
v <- var.test(mpg.auto,mpg.man)
data.frame(F_value = round(v$statistic, 3), P_value = round(v$p.value,3),
Conclusion = "두 집단의 분산은 동일하지 않다")
t <- t.test(mpg.auto,mpg.man,
mu = 0, var.equal = FALSE) ; t
data.frame(t_value = round(t$statistic, 3), P_value = round(t$p.value,3),
Conclusion = "P>0.05 이므로 국적에 따른 가격 차이가 나지 않는다")
cars_M <- MASS::Cars93
str(cars_M)
org.US <- cars_M %>%
filter(Origin %in% "USA") %>%
select (Price)
org.non_US <-  cars_M %>%
filter(Origin %in% "non_US") %>%
select (Price)
par(mfrow=c(1,2))
shapiro.test(org.US)
qqnorm(org.US)
qqline(org.US)
shapiro.test(org.non_US)
qqnorm(org.non_US)
qqline(org.non_US)
v <- var.test(org.US,org.non_US)
data.frame(F_value = round(v$statistic, 3), P_value = round(v$p.value,3),
Conclusion = "두 집단의 분산은 동일하지 않다")
t <- t.test(org.US, org.non_US,
mu = 0, var.equal = FALSE) ; t
data.frame(t_value = round(t$statistic, 3), P_value = round(t$p.value,3),
Conclusion = "P>0.05 이므로 국적에 따른 가격 차이가 나지 않는다")
qqnorm(mpg.man)
qqline(mpg.man)
par(mfrow=c(1,2))
shapiro.test(mpg.auto)
qqnorm(mpg.auto)
qqline(mpg.auto)
shapiro.test(mpg.man)
par(mfrow=c(1,2))
shapiro.test(mpg.auto)
qqnorm(mpg.auto)
qqline(mpg.auto)
shapiro.test(mpg.man)
qqnorm(mpg.man)
qqline(mpg.man)
car <- mtcars
mpg.auto <- car %>%
filter(am %in% 1)
mpg.man <- car %>%
filter(am %in% 0)
mpg.auto <- mpg.auto$mpg
mpg.man <- mpg.man$mpg
par(mfrow=c(1,2))
shapiro.test(mpg.auto)
qqnorm(mpg.auto)
qqline(mpg.auto)
shapiro.test(mpg.man)
qqnorm(mpg.man)
qqline(mpg.man)
shapiro.test(mpg.auto)
qqnorm(mpg.auto)
car <- mtcars
mpg.auto <- car %>%
filter(am %in% 1)
mpg.man <- car %>%
filter(am %in% 0)
mpg.auto <- mpg.auto$mpg
mpg.man <- mpg.man$mpg
car <- mtcars
mpg.auto <- car %>%
filter(am %in% 1)
mpg.man <- car %>%
filter(am %in% 0)
mpg.auto <- mpg.auto$mpg
mpg.man <- mpg.man$mpg
par(mfrow=c(1,2))
shapiro.test(mpg.auto)
qqnorm(mpg.auto)
qqline(mpg.auto)
shapiro.test(mpg.man)
qqnorm(mpg.man)
qqline(mpg.man)
org.US <- cars_M %>%
filter(Origin %in% "USA")
org.non_US <-  cars_M %>%
filter(Origin %in% "non_US")
