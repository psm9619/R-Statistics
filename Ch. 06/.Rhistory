xlab="성공 횟수(x)", ylab="확률 (P(X=x))",
main = "B(10, 0.8)")
text (7.9, prob_pan+0.01, paste("7번 성공률\n",0.2013*100, " %"), cex=1)
barplot(dist_pan, names=x, col="orange", border="yellow",
xlab="성공 횟수(x)", ylab="확률 (P(X=x))",
main = "0.8% 개별 성공률으로 패널티킥을 \n10 번 차서 7번 성공할 확률")
text (7.9, prob_pan+0.01, paste("7번 성공률\n",0.2013*100, " %"), cex=1)
a <- 0:20
dist_pan <- dbinom (a, 20, 0.05)
faulse <- dbinom (a, 20, 0.05)
a <- 0:20
faulse <- dbinom (a, 20, 0.05)
barplot(faluse, names=a, col="orange", border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
barplot(faulse, names=a, col="orange", border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
faulse
dist_pan
dist_pan <- dbinom (x, 10, 0.8)
dist_pan
barplot(dist_pan, names=x, col="orange", border="yellow",
xlab="성공 횟수(x)", ylab="확률 (P(X=x))",
main = "80% 개별 성공률으로 패널티킥을 \n10 번 차서 7번 성공할 확률")
faulse <- dbinom (a, 20, 0.05)
faulse
cols <- c("")
for (i in 1:length(faulse)) {
if (i <= 2)
cols <- c(cols, "red")
cols
}
for (i in 1:length(faulse)) {
if (i <= 2)
cols <- c(cols, "red")
cols
} ; cols
cols <- c(cols, "white")
cols <- c()
for (i in 1:length(faulse)) {
if (i <= 2)
cols <- c(cols, "red")
else
cols <- c(cols, "white")
} ; cols
cols <- c()
for (i in 0:length(faulse)-1) {
if (i <= 2)
cols <- c(cols, "red")
else
cols <- c(cols, "white")
} ; cols
faulse
cols <- c()
for (i in 1:length(faulse)-1) {
if (i <= 3)
cols <- c(cols, "red")
else
cols <- c(cols, "white")
} ; cols
faulse
cols <- c()
for (i in 1:length(faulse)-1) {
if (i <= 2)
cols <- c(cols, "red")
else
cols <- c(cols, "white")
} ; cols
barplot(faulse, names=a,
col=cols, border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
cols <- c()
for (i in 1:length(faulse)-1) {
if (i <= 2)
cols <- c(cols, "red")
else
cols <- c(cols, "yellow")
} ; cols
barplot(faulse, names=a,
col=cols, border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
cols <- c()
for (i in 1:length(faulse)-1) {
if (i <= 2)
cols <- c(cols, "red")
else
cols <- c(cols, "orange")
} ; cols
barplot(faulse, names=a,
col=cols, border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
ablines(v=3)
barplot(faulse, names=a,
col=cols, border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
abline(v=3)
barplot(faulse, names=a,
col=cols, border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
abline(v=4)
p_faulse
p_faulse <- pbinom (2, size = 20, prob = 0.05)
p_faulse
text (3, dbinom(2,20,0.05) + 0.01, paste("2개 이하 불량 누적 확률\n",p_faulse*100, " %"), cex=1)
barplot(faulse, names=a,
col=cols, border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
text (3, dbinom(2,20,0.05) + 0.01, paste("2개 이하 불량 누적 확률\n",p_faulse*100, " %"), cex=1)
barplot(faulse, names=a,
col=cols, border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
text (3, dbinom(2,20,0.05) + 0.01, paste("2개 이하 누적률\n",92, " %"), cex=0.3)
barplot(faulse, names=a,
col=cols, border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
text (3, dbinom(2,20,0.05) + 0.01, paste("2개 이하 \n누적 확률\n",92, " %"), cex=0.5)
barplot(faulse, names=a,
col=cols, border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
text (3.5, dbinom(2,20,0.05) + 0.015, paste("2개 이하 \n누적 확률\n",92, " %"), cex=0.6)
barplot(faulse, names=a,
col=cols, border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
text (3.5, dbinom(2,20,0.05) + 0.02, paste("2개 이하 \n누적 확률\n",92, " %"), cex=0.6)
barplot(faulse, names=a,
col=cols, border="yellow",
xlab="불량", ylab="확률 (P(X=x))",
main = "5%의 불량률으로 20개의 스마트폰을 제작시, \n불량이 2개 이하일 경우")
text (3.5, dbinom(2,20,0.05) + 0.03, paste("2개 이하 \n누적 확률\n",92, " %"), cex=0.6)
l <- seq(-3,3, by =0.001)
mu <- 800 ; sig <- 40
mu <- 800 ; sig <- 40
l <- seq(mu-3*sig, mu+3*sig, by =1)
l.norm <- dnorm(l, mu, sig)
l.norm
plot(l, l.norm, axes=F, type="l")
plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", x="day")
plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
axis(1)
lines(c(mu-3*sig, mu+3*sig), c(0,0))
mu <- 800 ; sig <- 40
l <- seq(mu-3*sig, mu+3*sig, by =1)
l.norm <- dnorm(l, mu, sig)
l.norm
plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
axis(1)
lines(c(mu-3*sig, mu+3*sig), c(0,0))
plot(l, l.norm, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
s <- seq(0, 700, by = 1)
s.norm <- dnorm(s, mu, sig)
polygon(s,s.norm, density = 10, col="red")
l.norm <- dnorm(l, mu, sig)
l.norm
plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
axis(1)
lines(c(mu-3*sig, mu+3*sig), c(0,0))
s <- seq(0, 700, by = 1)
s.norm <- dnorm(s, mu, sig)
polygon(s,s.norm, density = 10, col="red")
s <- c(0, s, 700)
s.norm <- c(0,s.norm,0)
polygon(s,s.norm, density = 10, col="red")
plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
axis(1)
lines(c(mu-3*sig, mu+3*sig), c(0,0))
s <- seq(0, 700, by = 1)
s.norm <- dnorm(s, mu, sig)
s <- c(0, s, 700)
s.norm <- c(0,s.norm,0)
polygon(s,s.norm, density = 10, col="red")
pnorm(750,800,40)
l.norm
plot(l, l.norm, axes=F, type="l",
main = "평균이 800일 이고 표준편차가 40일인 표준정규분포",
ylab = "P(X=x)", xlab="day")
axis(1)
lines(c(mu-3*sig, mu+3*sig), c(0,0))
s <- seq(0, 700, by = 1)
s.norm <- dnorm(s, mu, sig)
s <- c(0, s, 700)
s.norm <- c(0,s.norm,0)
polygon(s,s.norm, density = 20, col="red")
return (sum/n2)
# 5-1 점 추정
# 예제 5-2. 유효성 모의실험
mean.seq <- function (x) {
n <- length(x)
sum <- 0
n2 <- 0
for (i in 1:n) {
newx <- i*x[i]
sum <- sum + newx
n2 <- n2 +i
}
return (sum/n2)
}
y1 <- rep(NA, 1000)
y2 <- rep (NA, 1000)
smp <- rnorm (3)
y2[i] <- mean.seq(smp)
# 5-1 점 추정
# 예제 5-2. 유효성 모의실험
options (digits = 3)
n2 <- length (y2 [
(y2 > -0.1) & (y2 < 0.1)
])
n1 <- length (y1 [
(y1 > -0.1) & (y1 < 0.1) ])
n2 <- length (y2 [
(y2 > -0.1) & (y2 < 0.1)
])
data.frame (mean=mean(y1), var = var(y1), n = n1)
data.frame (mean=mean(y2), var=var(y2), n= n2)
par(mfrow=c(1,2))
set.seed(1)
# 5-1 점 추정
# 예제 5-2. 유효성 모의실험
options (digits = 3)
set.seed(1)
mean.seq <- function (x) {
n <- length(x)
sum <- 0
n2 <- 0
for (i in 1:n) {
newx <- i*x[i]
sum <- sum + newx
n2 <- n2 +i
}
return (sum/n2)
}
y1 <- rep(NA, 1000)
y2 <- rep (NA, 1000)
for (i in !:1000) {
smp <- rnorm (3)
y1[i] <- mean.seq(smp)
y2[i] <- mean.seq(smp)
}
for (i in 1:1000) {
smp <- rnorm (3)
y1[i] <- mean.seq(smp)
y2[i] <- mean.seq(smp)
}
n1 <- length (y1 [
(y1 > -0.1) & (y1 < 0.1) ])
n2 <- length (y2 [
(y2 > -0.1) & (y2 < 0.1)
])
data.frame (mean=mean(y1), var = var(y1), n = n1)
data.frame (mean=mean(y2), var=var(y2), n= n2)
hist (y2, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
main = "(1*x1 + 2*x2 + 6*x3)/6", xlab = "", col = "orange", border = "red")
par(mfrow=c(1,2))
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
main = "(x1 + x2 + x3)/3", xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
main = '(x1 + x2 + x3)/3', xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
main = '(x1 + x2 + x3) / 3 ', xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
main = '(x1 + x2 + x3) / 3 ', xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
main = '(x1 + x2 + x3) / 3' , xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
main = '(x1 + x2 + x3) / 3' , xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
main = "(x1 + x2 + x3) /3" , xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
main = "(x1 + x2 + x3) /3" )
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
main = "(x1 + x2 + x3) /3" )
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),xlab = "", col = "orange", border = "red")
hist (y2, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
main = "(1*x1 + 2*x2 + 6*x3)/6", xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65),
xlab = "", col = "orange", border = "red")
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65))
hist (y1, probability = T, xlim = c(-2, 2), ylim = (0,0.65))
hist (y1, probability = T, xlim = c(-2, 2), ylim = c(0,0.65),
main = "(x1 + x2 + x3) /3" ,xlab = "", col = "orange", border = "red")
hist (y2, probability = T, xlim = c(-2, 2), ylim = c(0,0.65),
main = "(1*x1 + 2*x2 + 6*x3)/6", xlab = "", col = "orange", border = "red")
# 5-1 점 추정
# 예제 5-1. 유효성
x <- seq(-3, 3, by = 0.01)
# 5-1 점 추정
# 예제 5-1. 유효성
x <- seq(-3, 3, by = 0.01)
y <- dnorm(x)
y.1 <- dnorm(x, sd=sqrt(1/3))
y.2 <- dnorm(x, sd=sqrt(7/18))
pnorm(0.1, sd=sqrt(1/3)) - pnorm(-0.1, sd=sqrt(1/3))
pnorm(0.1, sd=sqrt(7/18)) - pnorm(-0.1, sd=sqrt(7/18))
plot(x, y, type = "l", ylim = c(0, 0.8), axes = F, ylab = "",
lwd = 3, col="yellow")
lines (x, y.1, col="red", lwd=3)
lines (x, y.2, col="green", lty=2, lwd=3)
axis(1)
par(mfrow=c(1,1))
plot(x, y, type = "l", ylim = c(0, 0.8), axes = F, ylab = "",
lwd = 3, col="yellow")
lines (x, y.1, col="red", lwd=3)
lines (x, y.2, col="green", lty=2, lwd=3)
axis(1)
# 예제 5-3. 모비율에 대한 점추정
library(prob)
n<-3
smps.all <- rolldie(n)
str(smps.all)
head(smps.all, n=3)
is.even <- fucntion(x) return(!x%%2)
return(!x%%2)}
is.even <- fucntion(x) {
return(!x%%2)
}
is.even <- fucntion(x) {
return(!x%%2)
}
is.even <- fucntion(x) {
return (!x%%2)
}
is.even <- fucntion(x) {
return (!x%%2)
}
is.even <- fucntion(x)
is.even <- fucntion(x)
return (!x%%2)
is.even <- fucntion(x)   return (!x%%2)
is.even <- fucntion(x) { return (!x%%2) }
var.p <- function(x) {
return (sum((x - mean(x))^2 / length(x)))
}
}
p.even <- function(x, s.size=3) {
return (sum (is.even(x))/s.size)
}
phat <- apply(Smps.all, 1, p.even)
phat <- apply(smps.all, 1, p.even)
mean(phat)
(p.p <- 0.5)
library(prob)
n<-3
smps.all <- rolldie(n)
str(smps.all)
head(smps.all, n=3)
is.even <- fucntion(x) { return (!x%%2) }
var.p <- function(x) {
return (sum((x - mean(x))^2 / length(x)))
}
p.even <- function(x, s.size=3) {
return (sum (is.even(x))/s.size)
}
phat <- apply(smps.all, 1, p.even)
mean(phat)
(p.p <- 0.5)
var.p(phat)
p.p*(1-p.p) / 3
sqrt(var.p(phat))
return (!x%%2) }
return (!x%%2)
is.even <- function(x) {
return (!x%%2)
}
var.p <- function(x) {
return (sum((x - mean(x))^2 / length(x)))
}
p.even <- function(x, s.size=3) {
return (sum (is.even(x))/s.size)
}
phat <- apply(smps.all, 1, p.even)
mean(phat)
(p.p <- 0.5)
var.p(phat)
p.p*(1-p.p) / 3
sqrt(var.p(phat))
# 02. 구간 추정
# 예제 5-4. 모평균에 대한 95% 신뢰구간
set.seed(8)
y <- seq(-3,3, by=0.01)
xbar <- apply(smps, 1, mean)
plot(y, type= "n", xlab = "trial", ylab = "z",
main = "95% XI for Population mean",
xlim = c(1,100), ylim = c(-1.5,1.5), cex.lab = 1.8)
# 02. 구간 추정
# 예제 5-4. 모평균에 대한 95% 신뢰구간
set.seed(8)
n <- 10
x <- 1:100
y <- seq(-3,3, by=0.01)
smps <- matrix (rnorm(n*length(x)), ncol = n)
xbar <- apply(smps, 1, mean)
smps
xbar <- apply(smps, 1, mean)
xbar
head(xbar)
xbar <- apply(smps, 1, mean)
se <- 1/sqrt(10)
alpha <- 0.05
z <- qnorm(1-alpha/2)
ll <- xbar - z*se
ul <- xbar + z*se
plot(y, type= "n", xlab = "trial", ylab = "z",
main = "95% XI for Population mean",
xlim = c(1,100), ylim = c(-1.5,1.5), cex.lab = 1.8)
abline (h=0, col="red", lty=2)
1.c <- rep(NA, length(x))
1.c <- ifelse(ll*ul >0, "red", "black")
arrows(1:legnth(x), ll, 1:length(x), ul, code = 3,
angle=90, length=0.02, col = 1.c, lwd = 1.5)
set.seed(8)
n <- 10
x <- 1:100
y <- seq(-3,3, by=0.01)
smps <- matrix (rnorm(n*length(x)), ncol = n)
xbar <- apply(smps, 1, mean)
se <- 1/sqrt(10)
alpha <- 0.05
z <- qnorm(1-alpha/2)
ll <- xbar - z*se
ul <- xbar + z*se
plot(y, type= "n", xlab = "trial", ylab = "z",
main = "95% XI for Population mean",
xlim = c(1,100), ylim = c(-1.5,1.5), cex.lab = 1.8)
l.c <- rep(NA, length(x))
l.c <- ifelse(ll*ul >0, "red", "black")
arrows(1:legnth(x), ll, 1:length(x), ul, code = 3,
angle=90, length=0.02, col = 1.c, lwd = 1.5)
arrows(1:legnth(x), ll, 1:length(x), ul, code = 3,
angle=90, length=0.02, col = l.c, lwd = 1.5)
arrows(1:length(x), ll, 1:length(x), ul, code = 3,
angle=90, length=0.02, col = l.c, lwd = 1.5)
plot(y, type= "n", xlab = "trial", ylab = "z",
main = "95% CI for Population mean",
xlim = c(1,100), ylim = c(-1.5,1.5), cex.lab = 1.8)
abline (h=0, col="red", lty=2)
l.c <- rep(NA, length(x))
l.c <- ifelse(ll*ul >0, "red", "black")
arrows(1:length(x), ll, 1:length(x), ul, code = 3,
angle=90, length=0.02, col = l.c, lwd = 1.5)
# 예제 5-5. 모평귱에 대한 95% 신뢰구간 (모분산을 모를 때)
sample <- c(520,498, 481,512,515,542,520,518,527,526)
# 먼저 X_bar 계산 및 s^2 = total of (X-X_bar)^2/(n-1)  <- 여기서 n-1 은 표본의 분산이기에 n-1 자유도를 사용하는 것
# 다음으로는 X_bar - t_(0.025, 9) *s/sqrt(10) < u < X_bar - t_(0.975, 9)*s/sqrt(10)
ci.t <- function (x, alpha = 0.05) {
n <- length (smp) ;  m <- mean(x) ; s <- sd(x)
t <- qt(1-(alpha/2), df=n-1)
ll <- m - t*(s/sqrt(n)) ; ul <- m+t(s/sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names (ci) <- c("Confidence Level", "Lower limit", "Mean", "Upper limit")
return (ci)
}
ci.t(sample)
ci.t(sample, 0.1)
# 먼저 X_bar 계산 및 s^2 = total of (X-X_bar)^2/(n-1)  <- 여기서 n-1 은 표본의 분산이기에 n-1 자유도를 사용하는 것
# 다음으로는 X_bar - t_(0.025, 9) *s/sqrt(10) < u < X_bar - t_(0.975, 9)*s/sqrt(10)
ci.t <- function (x, alpha) {
n <- length (smp) ;  m <- mean(x) ; s <- sd(x)
t <- qt(1-(alpha/2), df=n-1)
ll <- m - t*(s/sqrt(n)) ; ul <- m+t(s/sqrt(n))
ci <- c(1-alpha, ll, m, ul)
names (ci) <- c("Confidence Level", "Lower limit", "Mean", "Upper limit")
return (ci)
}
ci.t(sample, 0.05)
ci.t(sample, 0.1)
setwd("D:/Workspace/R_Statistics/Ch. 06")
data <- read.csv("2016.6th.csv", header=T)
str(data)
tmp <- subset(data, data$나이 == 7)
height.p <- tmp$X104.키
set.seed(9)
height <- height.p[sample(length(height.p), 15)]
height
source('D:/Workspace/R_Statistics/Ch. 06/data.R', encoding = 'UTF-8', echo=TRUE)
save.image("data.rda")
load("data.rda")
set.seed(9)
height <- height.p[sample(length(height.p), 15)]
height
data
str(data)
set.seed(9)
height <- height.p[sample(length(height.p), 15)]
height
mean(height)
